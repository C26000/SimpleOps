@inherits SimpleOps.DocumentosGráficos.PlantillaBase<SimpleOps.DocumentosGráficos.DatosVenta>


@{

    ClaveMarco = "Marco";
    var anchoCliente = 500;
    var anchoFechas = Model.AnchoContenido - Model.MargenContenidos - anchoCliente;
    var diferenciaAnchoFechaYVencimiento = 25;

    static string APuntos(double número) => $"{número.ToString().Replace(",", ".")}px";

    var tieneIVA = !(string.IsNullOrEmpty(Model.IVATexto) || Model.IVATexto == "0");
    var tieneImpuestoConsumo = !(string.IsNullOrEmpty(Model.ImpuestoConsumoTexto) || Model.ImpuestoConsumoTexto == "0");
    var tieneDescuento = !(string.IsNullOrEmpty(Model.DescuentoCondicionadoTexto) || Model.DescuentoCondicionadoTexto == "0");
    var mostrarIVA = tieneIVA || !tieneImpuestoConsumo; // Se muestra siempre el IVA excepto cuando no tenga IVA y si tenga impuesto al consumo.
    var mostrarImpuestoConsumo = tieneImpuestoConsumo;
    var mostrarDescuento = !(!tieneDescuento && mostrarIVA && mostrarImpuestoConsumo); // Se muestra siempre el descuento excepto cuando no tiene descuento y además se está mostrando el IVA y el impuesto de consumo. Esto asegura que casi siempre se muestra el descuento = 0. Es una decisión por simple estética del diseño de la sección de totales, no se ve bien cuando solo hay 3 elementos en esta sección.  
    var cantidadTotales = 2 + (mostrarIVA ? 1 : 0) + (mostrarDescuento ? 1 : 0) + (mostrarImpuestoConsumo ? 1 : 0);

}


<table class="infosup">
    <tr>

        <td class="cliente-td">

            <div class="cliente-cn">
                <span class="t18b cliente-tít">Cliente</span>
                <div class="cliente-nom">@Model.ClienteNombre</div>
                <div>@Model.ClienteDirección @Model.ClienteMunicipioNombre</div>
                <div>@Model.ClienteIdentificaciónCompleta</div>
                <div>@Model.ClienteTeléfono</div>
                <div>@Model.ClienteContactoFacturasEmail</div>
            </div>

        </td>

        <td class="infosup-relleno" />

        <td class="fechas-td">
            <table class="tctr fechas-tb">

                <tr>

                    <td class="fechas-relleno" />

                    <td class="fecha-td">
                        <div class="fecha-cn">
                            <span class="t18b fecha-tít">Fecha</span>
                            <div class="fecha-val">@Model.FechaHora?.ToShortDateString() @Model.FechaHora?.ToString("hh:mm tt")</div>
                        </div>
                    </td>

                    <td class="venc-td">
                        <div class="tctr venc-cn">

                            @if (Model.NombreDocumento == "Factura") {
                                <span class="t18b venc-tít">Vencimiento</span>
                                <div class="venc-val">@Model.FechaVencimiento?.ToShortDateString()</div>
                            } else if (Model.NombreDocumento == "Nota Crédito") {
                                <span class="t18b venc-tít">Razón</span>
                                <div class="venc-val">@Model.RazónNotaCréditoTexto</div>
                            }

                        </div>
                    </td>

                </tr>

                <tr>
                    <td class="oc-td" colspan="3">
                        <div class="oc-cn-cn">
                            <div class="oc-cn">

                                @if (Model.NombreDocumento == "Factura") {
                                    <span class="t18b oc-tít">Orden de Compra</span>
                                    <div class="oc-val">@Model.OrdenCompraNúmero</div>
                                } else if (Model.NombreDocumento == "Nota Crédito") {
                                    <span class="t18b oc-tít">Número Factura</span>
                                    <div class="oc-val">@Model.CódigoVenta</div>
                                }

                            </div>
                        </div>
                    </td>
                </tr>

            </table>
        </td>

    </tr>
</table>


<div class="lista-cn"> 
    @Incluir("Lista", Model)
</div>


<div class="infoinf" >

    <hr class="infoinf-línea" />
    
    <table class="infoinf-tb" >
        <tr>

            <td class="obs-y-cufe" >

                <table>

                    <tr>

                        <td class="observación-td" >
                            <div class="observación-cn" >

                                @if (!string.IsNullOrEmpty(Model.Observación)) {
                                    <div class="t18b">Observación:</div>
                                    <div>@Model.Observación</div>
                                }

                            </div>
                        </td>

                        <td class="qr-td" >
                            <img src="@Model.QR" class="qr-img" />
                        </td>

                    </tr>

                    <tr>
                        <td colspan="2" > 
                            <span><span class="t18b" >@Model.NombreCude:</span> <span class="t9-5n" >@Model.Cude</span></span>
                        </td>
                    </tr>

                </table>

            </td>
            
            <td>
                <img src="@Model.CertificadoBase64" class="certificado-img" />
            </td>

            <td class="totales-td" > 

                <table class="tder totales-tb">

                    <tr>
                        <td class="nombretotal-td">
                            <span class="t18b nombretotal">Subtotal:</span>
                        </td>
                        <td>
                            <span>@Model.SubtotalBaseTexto</span>
                        </td>
                    </tr>

                    @if (mostrarIVA) {

                        <tr>
                            <td class="nombretotal-td">
                                <span class="t18b nombretotal">IVA:</span>
                            </td>
                            <td>
                                <span>@Model.IVATexto</span>
                            </td>
                        </tr>

                    }

                    @if (mostrarImpuestoConsumo) {

                        <tr>
                            <td class="nombretotal-td">
                                <span class="t18b nombretotal">INC:</span>
                            </td>
                            <td>
                                <span>@Model.ImpuestoConsumoTexto</span>
                            </td>
                        </tr>

                    }

                    @if (mostrarDescuento) {

                        <tr>
                            <td class="nombretotal-td">
                                <span class="t18b nombretotal">Descuento:</span>
                            </td>
                            <td>
                                <span>@Model.DescuentoCondicionadoTexto</span>
                            </td>
                        </tr>

                    }

                    <tr>
                        <td class="nombretotal-td">
                            <span class="t18b nombretotal">Total:</span>
                        </td>
                        <td>
                            <span>@Model.SubtotalFinalConImpuestosTexto</span>
                        </td>
                    </tr>

                </table>

            </td>

        </tr>
    </table>
   
</div>

@if (Model.MostrarInformaciónAdicional) {

    <div class="infoextra t14n" style="height: 20px; margin-top: -20px;"> @* Información solo necesaria para clientes que son estrictos al pie de la letra con los requerimientos de la DIAN. Se establece un tamaño y margen manual para que la adición de este elemento no afecte el resto de los cálculos de tamaños del documento. *@
    </div>

}

<style>


    /* <Información Superior */

    .cliente-cn,.oc-cn, .fecha-cn, .venc-cn { position: relative; bottom: 13px; }

    .cliente-cn { left: 15px; } /* El título de cliente va alineado a la izquierda entonces se debe separar un poco de la curva. */

    .cliente-tít, .fecha-tít, .venc-tít, .oc-tít { background-color: white; padding-right: 10px; padding-left: 10px; }

    .cliente-nom, .oc-val { margin-top: 7px; }

    .fecha-val { margin-top: 8px; } /* Es ligeramente mayor que cliente-nom y oc-val porque al ser dos renglones necesita un poco más de espacio para verse bien. */

    .venc-val { margin-top: 13px; } /* La fecha de vencimiento se deben separar más del título porque deben quedar centradas en la celda mientras que los datos del cliente deben quedar lo más cercano posible pues estos son los que determinan el alto de toda la sección de información superior. */

    .fechas-td, .cliente-td { border: @APuntos(Model.GrosorBordes) solid @Model.ColorBordes; border-radius: 15px; }

    .cliente-td { width: @APuntos(anchoCliente); }

    .fechas-td { padding-right: 1px; padding-left: -1px;  vertical-align: top; width: @APuntos(anchoFechas); } /* 1px y -1px son un pequeño ajuste para que el borde de orden de compra se ajuste un poco por encima del borde del cuadro fechas. */

    .fechas-relleno { width: 8px; } /* Se usa para evitar que la fecha quede muy a la izquierda. */

    .fechas-tb { width: @APuntos(anchoFechas); }

    .venc-td { width: @APuntos(anchoFechas / 2 + diferenciaAnchoFechaYVencimiento); vertical-align: top; }

    .fecha-td { width: @APuntos(anchoFechas / 2 - diferenciaAnchoFechaYVencimiento); vertical-align: top; height: 75px; } /* Los 75px son establecidos para permitir un margen de 8px arriba y abajo para la fecha y hora de emisión. */

    .oc-cn-cn { border-top: @APuntos(Model.GrosorBordes) solid @Model.ColorBordes; } /* Elemento auxiliar necesario porque iText tiene un error que oculta el oc-tít detrás del borde de oc-td si se le pusiera a este. Se intentó con z-index y tampoco funciona. */

    .infosup-relleno { width: @APuntos(Model.MargenContenidos); }

    .infosup, .lista-cn { width: @APuntos(Model.AnchoContenido); margin-bottom: @APuntos(Model.MargenContenidos); }

    .fechas-tb { border-collapse: collapse; } /* Necesario para que el borde del título orden de compra quede ajustado al cuadro de fechas. */

    /* Información Superior> */


    /* <Información Inferior */

    .infoinf { margin-bottom: @APuntos(Model.MargenContenidos); page-break-inside: avoid; }

    .infoinf-línea { margin-top: 50px; }

    .infoinf-tb { margin-top: 20px; }

    .obs-y-cufe { width: 440px; vertical-align: top; }

    .observación-td { vertical-align: top; }

    .observación-cn { width: @APuntos(Model.AnchoObservación); }

    .qr-td { width: 85px; }

    .qr-img { width: 85px; height: 85px; } /* 85 garantiza un tamaño de 2cm x 2cm en la hoja impresa que es lo que obliga la DIAN. */

    .certificado-img { margin-right: 15px; margin-left: 15px; margin-top: 7px; height: 130px; }

    .totales-td { vertical-align: top; }

    .totales-tb { margin-right: 0px; width: 184px; }

    .nombretotal-td { height: @(cantidadTotales switch { 2 => "34px", 3 => "34px", 4 => "34px", 5 => "26px", 6 => "22px", _ => "22px" } ); } /* Preferiblemente no se deberían usar 3 elementos en totales porque si se quisieran espaciar verticalmente se verían muy separados entre sí y si se quisieran usar con una separación normal quedarían con un espacio en blanco abajo. Se debe procurar mantener subtotal, algún impuesto (IVA o INC), descuento y total. */

    .nombretotal { margin-right: 15px; }

    /* Información Inferior> */


</style>